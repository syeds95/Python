# ===== Snowflake loader (inline) =====
import os
import pandas as pd
from snowflake.snowpark import Session

def _get_session():
    cfg = {
        "account":   os.getenv("SNOWFLAKE_ACCOUNT"),
        "user":      os.getenv("SNOWFLAKE_USER"),
        "password":  os.getenv("SNOWFLAKE_PASSWORD"),
        "role":      os.getenv("SNOWFLAKE_ROLE", "PUBLIC"),
        "warehouse": os.getenv("SNOWFLAKE_WAREHOUSE"),
        "database":  os.getenv("SNOWFLAKE_DATABASE"),
        "schema":    os.getenv("SNOWFLAKE_SCHEMA"),
    }
    return Session.builder.configs(cfg).create()

def _fq(name: str) -> str:
    db, sch = os.getenv("SNOWFLAKE_DATABASE"), os.getenv("SNOWFLAKE_SCHEMA")
    return f"{db}.{sch}.{name}" if db and sch else name

def write_pandas_df_to_snowflake(df: pd.DataFrame, table_name: str, truncate_first=True):
    session = _get_session()
    try:
        tname = _fq(table_name)

        if truncate_first:
            session.sql(f"TRUNCATE TABLE {tname}").collect()

        if df is None or df.empty:
            print(f"[INFO] {tname}: empty DataFrame; nothing to write.")
            return

        # Ensure DATE columns are dates (not timestamps) to match your DDL
        df = df.copy()
        for col in df.columns:
            if pd.api.types.is_datetime64_any_dtype(df[col]):
                df[col] = pd.to_datetime(df[col]).dt.date

        spdf = session.create_dataframe(df)
        spdf.write.save_as_table(tname, mode="overwrite")
        print(f"[OK] Wrote {len(df):,} rows to {tname}")
    finally:
        session.close()

def load_all_to_snowflake(patient_df, rollups_dict, monthly_trends_df, monthly_lateness_buckets_df):
    write_pandas_df_to_snowflake(patient_df.reset_index(drop=True), "PATIENT_BEHAVIOR_METRICS")
    write_pandas_df_to_snowflake(rollups_dict.get("PATIENT_GROUP"),    "BEHAVIOR_BY_PATIENT_GROUP")
    write_pandas_df_to_snowflake(rollups_dict.get("ITEM_GROUP"),       "BEHAVIOR_BY_ITEM_GROUP")
    write_pandas_df_to_snowflake(rollups_dict.get("INSURANCE"),        "BEHAVIOR_BY_INSURANCE")
    write_pandas_df_to_snowflake(rollups_dict.get("DAYS_LATE_BUCKET"), "BEHAVIOR_BY_DAYS_LATE_BUCKET")
    write_pandas_df_to_snowflake(monthly_trends_df,         "MONTHLY_BEHAVIOR_TRENDS")
    write_pandas_df_to_snowflake(monthly_lateness_buckets_df, "MONTHLY_LATENESS_BUCKET_TRENDS")
# ===== end loader =====


load_all_to_snowflake(
    patient_df=patient,
    rollups_dict=rollups,
    monthly_trends_df=monthly_trends,
    monthly_lateness_buckets_df=monthly_lateness_buckets
)

